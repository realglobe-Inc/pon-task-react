/**
 * Bud file for README.md
 */

'use strict'

const { readmeMdBud } = require('ape-tmpl')
const pkg = require('./package.json')
const { commentsInFile } = require('ape-doc')
const aglob = require('aglob')

module.exports = readmeMdBud({
  pkg,
  repo: pkg.repository,
  sections: 'doc/guides/*.md.hbs',
  badges: {
    // TODO OSS
    // travis: true,
    travisCom: true,
    travisComToken: 'aeFzCpBZebyaRijpCFmm',
    npm: true,
    standard: true
  },
  overview: 'doc/overview.md',
  links: require('./doc/links'),
  vars: {
    funcs: aglob.sync('lib/*.js')
      .filter((filename) => !/index\.js$/.test(filename))
      .map((filename) => {
        let [ comments ] = commentsInFile(filename)
        let [ func ] = comments.function
        return {
          name: func.name,
          description: comments.description,
          params: comments.param.map(({ type, name, description }) => ({
            name: name.trim(),
            type: type.replace(/\|/g, '&#124;'),
            description: description.trim().replace(/^-/, ''),
          })),
          returns: comments.returns && comments.returns[ 0 ],
          get signature () {
            let { name, params, returns } = this
            let paramsText = params.map(({ name }) => name).filter((name) => !/\./.test(name)).join(', ')
            let signature = `${name}(${paramsText})`
            if (returns) {
              signature += ` -> ${returns.type}`
            }
            return signature
          }
        }
      })
  }
})

if (!module.parent) {
  require('coz').render(__filename)
}
